
ARMGNU = arm-none-eabi

AOPS = --warn --fatal-warnings -mcpu=cortex-m0
COPS = -Wall -Werror -O2 -nostdlib -nostartfiles -ffreestanding  -mcpu=cortex-m0

LOPS = -Wall -m32 -emit-llvm -target arm-none-eabi -mcpu=cortex-m0 -mthumb
LLCOPS = -march=thumb -mcpu=cortex-m0
#LLCOPS = -mcpu=cortex-m0
COPS = -Wall  -O2 -nostdlib -nostartfiles -ffreestanding
OOPS = -std-compile-opts

gcc : ired02.gcc.thumb.sram.bin

all : gcc clang

clang : ired02.clang.thumb.norm.flash.bin ired02.clang.thumb.opt.flash.bin ired02.clang.thumb.norm.sram.bin ired02.clang.thumb.opt.sram.bin 

clean:
	rm -f *.bin
	rm -f *.o
	rm -f *.elf
	rm -f *.list
	rm -f *.bc
	rm -f *.opt.s
	rm -f *.norm.s

#---------------------------------

flash.o : flash.s
	$(ARMGNU)-as $(AOPS) flash.s -o flash.o

sram.o : sram.s
	$(ARMGNU)-as $(AOPS) sram.s -o sram.o

ired02.gcc.thumb.o : ired02.c
	$(ARMGNU)-gcc $(COPS) -mthumb -c ired02.c -o ired02.gcc.thumb.o

ired02.gcc.thumb.flash.bin : flash.ld flash.o ired02.gcc.thumb.o
	$(ARMGNU)-ld -o ired02.gcc.thumb.flash.elf -T flash.ld flash.o ired02.gcc.thumb.o
	$(ARMGNU)-objdump -D ired02.gcc.thumb.flash.elf > ired02.gcc.thumb.flash.list
	$(ARMGNU)-objcopy ired02.gcc.thumb.flash.elf ired02.gcc.thumb.flash.bin -O binary

ired02.gcc.thumb.sram.bin : sram.ld sram.o ired02.gcc.thumb.o
	$(ARMGNU)-ld -o ired02.gcc.thumb.sram.elf -T sram.ld sram.o ired02.gcc.thumb.o
	$(ARMGNU)-objdump -D ired02.gcc.thumb.sram.elf > ired02.gcc.thumb.sram.list
	$(ARMGNU)-objcopy ired02.gcc.thumb.sram.elf ired02.gcc.thumb.sram.bin -O binary

#---------------------------------

ired02.clang.bc : ired02.c
	clang $(LOPS) -c ired02.c -o ired02.clang.bc

ired02.clang.thumb.norm.flash.bin : flash.ld flash.o ired02.clang.bc
	#llc $(LLCOPS) ired02.clang.bc -o ired02.clang.thumb.norm.s
	#$(ARMGNU)-as $(AOPS) ired02.clang.thumb.norm.s -o ired02.clang.thumb.norm.o
	llc $(LLCOPS) ired02.clang.bc -filetype=obj -o ired02.clang.thumb.norm.o
	$(ARMGNU)-ld -o ired02.clang.thumb.norm.flash.elf -T flash.ld flash.o ired02.clang.thumb.norm.o
	$(ARMGNU)-objdump -D ired02.clang.thumb.norm.flash.elf > ired02.clang.thumb.norm.flash.list
	$(ARMGNU)-objcopy ired02.clang.thumb.norm.flash.elf ired02.clang.thumb.norm.flash.bin -O binary

ired02.clang.thumb.opt.flash.bin : flash.ld flash.o ired02.clang.bc
	opt $(OOPS) ired02.clang.bc -o ired02.clang.thumb.opt.bc
	#llc $(LLCOPS) ired02.clang.thumb.opt.bc -o ired02.clang.thumb.opt.s
	#$(ARMGNU)-as $(AOPS) ired02.clang.thumb.opt.s -o ired02.clang.thumb.opt.o
	llc $(LLCOPS) ired02.clang.thumb.opt.bc -filetype=obj -o ired02.clang.thumb.opt.o
	$(ARMGNU)-ld -o ired02.clang.thumb.opt.flash.elf -T flash.ld flash.o ired02.clang.thumb.opt.o
	$(ARMGNU)-objdump -D ired02.clang.thumb.opt.flash.elf > ired02.clang.thumb.opt.flash.list
	$(ARMGNU)-objcopy ired02.clang.thumb.opt.flash.elf ired02.clang.thumb.opt.flash.bin -O binary


ired02.clang.thumb.norm.sram.bin : sram.ld sram.o ired02.clang.bc
	#llc $(LLCOPS) ired02.clang.bc -o ired02.clang.thumb.norm.s
	#$(ARMGNU)-as $(AOPS) ired02.clang.thumb.norm.s -o ired02.clang.thumb.norm.o
	llc $(LLCOPS) ired02.clang.bc -filetype=obj -o ired02.clang.thumb.norm.o
	$(ARMGNU)-ld -o ired02.clang.thumb.norm.sram.elf -T sram.ld sram.o ired02.clang.thumb.norm.o
	$(ARMGNU)-objdump -D ired02.clang.thumb.norm.sram.elf > ired02.clang.thumb.norm.sram.list
	$(ARMGNU)-objcopy ired02.clang.thumb.norm.sram.elf ired02.clang.thumb.norm.sram.bin -O binary

ired02.clang.thumb.opt.sram.bin : sram.ld sram.o ired02.clang.bc
	opt $(OOPS) ired02.clang.bc -o ired02.clang.thumb.opt.bc
	#llc $(LLCOPS) ired02.clang.thumb.opt.bc -o ired02.clang.thumb.opt.s
	#$(ARMGNU)-as $(AOPS) ired02.clang.thumb.opt.s -o ired02.clang.thumb.opt.o
	llc $(LLCOPS) ired02.clang.thumb.opt.bc -filetype=obj -o ired02.clang.thumb.opt.o
	$(ARMGNU)-ld -o ired02.clang.thumb.opt.sram.elf -T sram.ld sram.o ired02.clang.thumb.opt.o
	$(ARMGNU)-objdump -D ired02.clang.thumb.opt.sram.elf > ired02.clang.thumb.opt.sram.list
	$(ARMGNU)-objcopy ired02.clang.thumb.opt.sram.elf ired02.clang.thumb.opt.sram.bin -O binary




